{"version":3,"sources":["hooks/useInterval.js","hooks/useFechBusStopInfo.js","components/BusStop.js","App.js","reportWebVitals.js","index.js"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useFetchBusStopInfo","busStopId","apiUrl","fetch","then","response","json","data","busesInfo","title","freqs","destinos","map","d","push","linea","time","primero","segundo","sort","a","b","replace","catch","e","console","log","BusStop","useState","buses","setBuses","fetchInfo","info","className","bus","App","ids","setIds","URLSearchParams","window","location","search","get","split","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAEO,SAASA,EAAYC,EAAUC,GACpC,IAAMC,EAAgBC,kBAAO,eAE7BC,qBAAU,WACRF,EAAcG,QAAUL,EACxBE,EAAcG,YACb,CAACL,IAEJI,qBAAU,WACR,GAAc,OAAVH,EAAJ,CAGA,IAMMK,EAAKC,aANE,WACNL,GAGLA,EAAcG,YAEaJ,GAC7B,OAAO,kBAAMO,cAAcF,OAC1B,CAACN,EAAUC,ICrBT,SAASQ,EAAoBC,GAChC,IAAMC,EAAM,sGAAkGD,EAAlG,SACZ,OAAOE,MAAMD,GACRE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACH,IAAMC,EAAY,CACdX,GAAIU,EAAKV,GACTY,MAAOF,EAAKE,MACZC,MAAO,IAaX,OAXAH,EAAKI,SAASC,KAAI,SAACC,GAAD,OACdL,EAAUE,MAAMI,KACZ,CAAEC,MAAOF,EAAEE,MAAOC,KAAMH,EAAEI,SAC1B,CAAEF,MAAOF,EAAEE,MAAOC,KAAMH,EAAEK,aAGlCV,EAAUE,MAAMS,MAAK,SAACC,EAAGC,GAGrB,OAFiBD,EAAEJ,KAAKM,QAAQ,YAAa,IAAIA,QAAQ,iBAAkB,KAC1DD,EAAEL,KAAKM,QAAQ,YAAa,IAAIA,QAAQ,iBAAkB,QAGvEd,KAEXe,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,M,WCIjBG,MAtBf,YAA0B,IAAP9B,EAAM,EAANA,GAAM,EACK+B,mBAAS,CAAE/B,GAAI,KAAMY,MAAO,GAAIC,MAAO,KAD5C,mBACdmB,EADc,KACPC,EADO,KAGfC,EAAY/B,EAMlB,OAPiBV,GAGR,WACLyC,EAAUlC,GAAIO,MAAK,SAAA4B,GAAI,OAAIF,EAASE,QACrC,KAGC,qCACI,oBAAIC,UAAU,QAAd,SAAuBJ,EAAMpB,QAEzBoB,EAAMnB,MAAME,KAAI,SAAAsB,GAAG,OACf,sBAAoBD,UAAU,YAA9B,UACA,sBAAMA,UAAS,4BAAuBC,EAAInB,OAA1C,SAAoDmB,EAAInB,QADxD,IACuEmB,EAAIlB,OADhEkB,EAAIrC,WCApBsC,MAhBf,WAAgB,IAAD,EAESP,mBAAS,IAFlB,mBAENQ,EAFM,KAEDC,EAFC,KASb,OANA1C,qBAAU,WACR,IACMyC,EADS,IAAIE,gBAAgBC,OAAOC,SAASC,QAChCC,IAAI,OAAOC,MAAM,KACpCN,EAAOD,KACN,IAGD,qBAAKH,UAAU,MAAf,SACIG,EAAIxB,KAAI,SAAAf,GAAE,OAAI,cAAC,EAAD,CAAoBA,GAAIA,GAATA,SCHtB+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.610448b6.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef(() => {});\n\n  useEffect(() => {\n    savedCallback.current = callback;\n    savedCallback.current();\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay === null) {\n      return;\n    }\n    const tick = () => {\n      if (!savedCallback) {\n        return;\n      }\n      savedCallback.current();\n    };\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [callback, delay]);\n}\n","\nexport function useFetchBusStopInfo(busStopId) {\n    const apiUrl = `http://www.zaragoza.es/api/recurso/urbanismo-infraestructuras/transporte-urbano/poste/tuzsa-${busStopId}.json`\n    return fetch(apiUrl)\n        .then((response) => response.json())\n        .then((data) => {\n            const busesInfo = {\n                id: data.id,\n                title: data.title,\n                freqs: []\n            }\n            data.destinos.map((d) =>\n                busesInfo.freqs.push(\n                    { linea: d.linea, time: d.primero },\n                    { linea: d.linea, time: d.segundo }\n                )\n            );\n            busesInfo.freqs.sort((a, b) => {\n                const minutesA = a.time.replace(\" minutos.\", \"\").replace(\"Sin estimacin.\", 999);\n                const minutesB = b.time.replace(\" minutos.\", \"\").replace(\"Sin estimacin.\", 999);\n                return minutesA - minutesB;\n            });\n            return (busesInfo);\n        })\n        .catch(e => console.log(e))\n}","import './BusStop.css';\nimport { useState } from 'react'\nimport { useInterval } from '../hooks/useInterval';\nimport { useFetchBusStopInfo } from '../hooks/useFechBusStopInfo';\n\n\nfunction BusStop({ id }) {\n    const [buses, setBuses] = useState({ id: null, title: '', freqs: [] })\n    const interval = useInterval;\n    const fetchInfo = useFetchBusStopInfo;\n  \n    interval(() => {\n        fetchInfo(id).then(info => setBuses(info));\n    }, 30000);\n\n    return (\n        <>\n            <h2 className=\"title\">{buses.title}</h2>\n            {\n                buses.freqs.map(bus =>\n                    <div key={ bus.id } className=\"frequency\">\n                    <span className={`bus-line bus-line-${bus.linea}`}>{bus.linea}</span> {bus.time}\n                </div>)\n            }\n        </>\n  );\n}\n\nexport default BusStop;\n","import './App.css';\nimport BusStop from './components/BusStop';\nimport {useState, useEffect} from 'react'\n\nfunction App() {\n\n  const [ids, setIds] = useState([])\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const ids = params.get(\"ids\").split(',');\n    setIds(ids);\n  }, [])\n\n  return (\n    <div className=\"App\">\n      { ids.map(id => <BusStop key={ id } id={id} />) }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}